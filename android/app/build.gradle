// import com.android.build.OutputFile
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react {
}


def enableProguardInReleaseBuilds = false
def enableSeparateBuildPerCPUArchitecture = false

def jscFlavor = 'org.webkit:android-jsc:+'

// project.ext.envConfigFiles = [
//         debug       : ".env.dev",
//         release     : ".env.prod",
//         releaseStage: ".env.stage",
//         releaseTest : '.env.test',
// ]


android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    namespace "com.reactnativedemo"
    defaultConfig {
        applicationId "com.reactnativedemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        resValue "string", "build_config_package", "com.reactnativeDemo"
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            //noinspection ChromeOsAbiSupport
            include "armeabi-v7a", "arm64-v8a"
        }
    }

    // project.ext.react = [
    // // 设置beta版本打包jsbundle
    // // 如没有设置，则beta版会和debug版一样，读取本地js-server的jsbundle
    //     bundleInBeta: true,
    // ]

    // flavorDimensions "default"
    //     productFlavors {
    //     dev {
    //         applicationId "com.workshopapp.debug"
    //             manifestPlaceholders = [
    //                 app_name: "@string/app_name_debug",
    //                 app_icon: "@mipmap/ic_launcher",
    //                 app_round_icon: "@mipmap/ic_launcher_round"
    //         ]
    //     }
    //     beta {
    //         applicationId "com.workshopapp.test"
    //             manifestPlaceholders = [
    //                 app_name: "@string/app_name_test",
    //                 app_icon: "@mipmap/ic_launcher",
    //                 app_round_icon: "@mipmap/ic_launcher_round"
    //         ]
    //     }
    //     stage {
    //         applicationId "com.workshopapp.stage"
    //             manifestPlaceholders = [
    //                 app_name: "@string/app_name_stage",
    //                 app_icon: "@mipmap/ic_launcher",
    //                 app_round_icon: "@mipmap/ic_launcher_round"
    //         ]
    //     }
    //     prod {
    //         applicationId "com.workshopapp.prod"
    //             manifestPlaceholders = [
    //                 app_name: "@string/app_name",
    //                 app_icon: "@mipmap/ic_launcher",
    //                 app_round_icon: "@mipmap/ic_launcher_round"
    //         ]
    //     }
    // } 

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        beta {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
        stage {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }

    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dev"
            manifestPlaceholders = [
                    app_name      : "@string/app_name_debug",
                    app_icon      : "@mipmap/ic_launcher",
                    // //app_icon: "@mipmap/ic_launcher_debug",
                    app_round_icon: "@mipmap/ic_launcher_round"
            ]
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            // 设置manifest占位符，为了显示不同的软件名
            manifestPlaceholders = [
                    app_name      : "@string/app_name",
                    app_icon      : "@mipmap/ic_launcher",
                    app_round_icon: "@mipmap/ic_launcher_round"
            ]
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        releaseStage.initWith(release)
        releaseStage {
            //为测试版本的包名添加.beta
            applicationIdSuffix ".stage"
            // 设置manifest占位符，为了显示不同的软件名
            manifestPlaceholders = [
                    app_name      : "@string/app_name_stage",
                    app_icon      : "@mipmap/ic_launcher",
                    //app_icon: "@mipmap/ic_launcher_stage",
                    app_round_icon: "@mipmap/ic_launcher_round"
            ]
            matchingFallbacks = ['release']
        }

        releaseTest.initWith(release)
        releaseTest {
            //为测试版本的包名添加.beta
            applicationIdSuffix ".test"
            // 设置manifest占位符，为了显示不同的软件名
            manifestPlaceholders = [
                    app_name      : "@string/app_name_test",
                    app_icon      : "@mipmap/ic_launcher",
                    // //app_icon: "@mipmap/ic_launcher_test",
                    app_round_icon: "@mipmap/ic_launcher_round"
            ]

            matchingFallbacks = ['release']
        }

    }

}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")
    implementation("com.facebook.react:react-native:")
    implementation project(':react-native-config')
    implementation project(':react-native-vector-icons')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
project.ext.vectoricons = [
    iconFontNames: [ 'MaterialIcons.ttf', 'EvilIcons.ttf','AntDesign.ttf','Feather.ttf','FontAwesome.ttf','Fontisto.ttf','Foundation.ttf','Ionicons.ttf' ] // Specify font files
]
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
